<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.runonce.dao.system.mapper.DepartmentMapper">
    <resultMap id="BaseResultMap" type="com.runonce.model.system.Department">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="create_by" property="createBy" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="del_flag" property="delFlag" jdbcType="INTEGER"/>
        <result column="update_by" property="updateBy" jdbcType="VARCHAR"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="parent_id" property="parentId" jdbcType="VARCHAR"/>
        <result column="sort_order" property="sortOrder" jdbcType="DECIMAL"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="is_location" property="isLocation" jdbcType="BIT"/>
        <result column="is_parent" property="isParent" jdbcType="BIT"/>
        <result column="area_code" property="areaCode" jdbcType="VARCHAR"/>

        <result column="social_credit_code" property="socialCreditCode" jdbcType="VARCHAR"/>
        <result column="central_departments" property="centralDepartments" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, create_by, create_time, del_flag, update_by, update_time, parent_id, sort_order,
    status, title, is_parent, area_code
  </sql>
    <select id="selectByIdOrParentId" resultType="java.util.Map">
        SELECT
        td.id,
        td.title,
        IF(count(td2.id)>0,TRUE,FALSE) AS isExistSon,
        td.`status`
        FROM
        t_department AS td
        LEFT JOIN t_department AS td2
        ON td.id = td2.parent_id
        AND td2.del_flag = 0
        WHERE
        1=1
        <if test="id != null">
            AND td.id = #{id,jdbcType=VARCHAR}
        </if>

        <if test="parentId != null">
            AND td.parent_id = #{parentId,jdbcType=VARCHAR}
        </if>
        AND
        td.del_flag = 0
        GROUP BY td.id
    </select>


    <select id="getAllByIsLocation" parameterType="java.lang.Boolean" resultMap="BaseResultMap">

        SELECT
        *
        FROM
        t_department
        WHERE
        1=1
        AND del_flag = FALSE
        <if test="isLocation != null">
            AND is_location = #{isLocation,jdbcType=BIT}
        </if>


    </select>

    <select id="selectDeptGly" resultType="java.lang.String" parameterType="java.util.List">
        SELECT
        b.id
        FROM
        t_department AS a,
        t_user AS b,
        t_user_role AS c,
        t_role AS d
        WHERE
        a.id = b.department_id
        AND b.id = c.user_id
        AND c.role_id = d.id
        AND d.data_type = 1
        and a.id =#{deptId}

        <!--  <foreach collection="deptIdList" index="index" item="id" open="(" separator="," close=")">
              #{id}
          </foreach>-->
    </select>

    <select id="selectReviewGly" resultType="java.lang.String">
        SELECT
            b.id
        FROM
            t_user AS b,
            t_user_role AS c,
            t_role AS d
        WHERE
           b.id = c.user_id
          AND c.role_id = d.id
          AND d.data_type = 3
    </select>

    <select id="selectGly" resultType="java.lang.String">
        SELECT
            b.id
        FROM
            t_user AS b,
            t_user_role AS c,
            t_role AS d
        WHERE
            b.id = c.user_id
          AND c.role_id = d.id
          AND d.data_type = 0
    </select>

    <select id="selectAllLocation" resultType="java.lang.String">
        SELECT
            id
        FROM
            t_department
        WHERE
                is_location = TRUE
                AND del_flag = FALSE
                AND parent_id = '610100000000'
           OR id = '610100000000'
    </select>

    <select id="findEventById" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT count(*) FROM t_department AS td
        INNER JOIN departmental_matters dm ON dm.deptId = td.id
        WHERE td.id = #{deptId}
    </select>

    <select id="findChildrenById" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT count(*) FROM t_department
        WHERE parent_id = #{deptId}
    </select>

    <select id="sendGroup" parameterType="string" resultType="com.runonce.httpbean.assets.reqbean.Group">
        SELECT
         td.id AS fGroupId,
         td.id AS fImportId,
         td.title AS fGroupName,
         td.parent_id AS fParentId,
         td.area_code AS fPlaceId,
         td.region AS fBelongTo,
         'list' AS fDisplayMode,
         CASE td.region WHEN '3' THEN 1 else 0 END AS fIsMin,
         td.social_credit_code AS fSocialCreditCode,
         td.central_departments AS fCentralDepartments
		FROM
        t_department td
        WHERE td.area_code =  #{areaCode}
		AND td.is_location = 0
    </select>

    <select id="sendPlace" parameterType="string" resultType="com.runonce.httpbean.assets.reqbean.Place">
        SELECT
            id AS fPlaceId,
            id AS fImportId,
            parent_id AS fParentId,
            sort_order AS fSortOrder,
            status AS fPlaceStatus,
            title AS fPlaceName,
            region AS fRegion
        FROM t_department WHERE id = #{areaCode}
    </select>
</mapper>